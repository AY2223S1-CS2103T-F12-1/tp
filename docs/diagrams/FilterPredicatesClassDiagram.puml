@startuml
'https://plantuml.com/class-diagram

interface Predicate<T>
abstract class AbstractFilterPropsPredicate {
+ test(Property property)
}
abstract class AbstractFilterBuyerPredicate {
+ test(Buyer buyer)
}
class BuyerNameContainsSubstringPredicate {
- String string
+ test(Buyer buyer)
+ equals(Object other)
}
class FilterBuyerByPricePredicate {
- Price price
+ test(Buyer buyer)
+ equals(Object other)
}
class FilterBuyerByPriorityPredicate {
- Priority priority
+ test(Buyer buyer)
+ equals(Object other)
}
class FilterBuyerContainingAllCharacteristicsPredicate {
- Characteristics characteristics
+ test(Buyer buyer)
+ equals(Object other)
}
class FilterBuyerContainingAnyCharacteristicsPredicate {
- Characteristics characteristics
+ test(Buyer buyer)
+ equals(Object other)
}
class FilterPropsByOwnerNamePredicate {
- Name name
+ test(Property property)
+ equals(Object other)
}
class FilterPropsByPricePredicate {
- Price price
+ test(Property property)
+ equals(Object other)
}
class FilterPropsContainingAllCharacteristicsPredicate {
- Characteristics characteristics
+ test(Property property)
+ equals(Object other)
}
class FilterPropsContainingAnyCharacteristicsPredicate {
- Characteristics characteristics
+ test(Property property)
+ equals(Object other)
}
class PropertyNameContainsSubstringPredicate{
- String string
+ test(Property property)
+ equals(Object other)
}


AbstractFilterBuyerPredicate .up.|> Predicate
AbstractFilterPropsPredicate .up.|> Predicate

BuyerNameContainsSubstringPredicate --l|> AbstractFilterBuyerPredicate
FilterBuyerByPricePredicate --r|> AbstractFilterBuyerPredicate
FilterBuyerByPriorityPredicate --d|> AbstractFilterBuyerPredicate
FilterBuyerContainingAllCharacteristicsPredicate --up|> AbstractFilterBuyerPredicate
FilterBuyerContainingAnyCharacteristicsPredicate --up|> AbstractFilterBuyerPredicate

FilterPropsByOwnerNamePredicate --l|> AbstractFilterPropsPredicate
FilterPropsByPricePredicate --r|> AbstractFilterPropsPredicate
FilterPropsContainingAllCharacteristicsPredicate --d|> AbstractFilterPropsPredicate
FilterPropsContainingAnyCharacteristicsPredicate --up|> AbstractFilterPropsPredicate
PropertyNameContainsSubstringPredicate --up|> AbstractFilterPropsPredicate
@enduml